# Development environment buildout
# ================================

[buildout]
parts =
    instance
    test
    coverage-report
    omelette
    zopepy
    zopeskel
    checkversions
    mkrelease
    archgenxml

extends =
    packages.cfg

# Packages to check out/update when buildout is run
auto-checkout =

# Make sure buildout always attempts to update packages
always-checkout = force

#develop =
#    src/fireplone.policy
#    src/fireplone.theme
#    src/fireplone.portlet

# Development Zope instance. Installs the ``bin/instance`` script
[instance]
recipe = plone.recipe.zope2instance
http-address = 8080
user = admin:admin
verbose-security = on
eggs =
    ${eggs:main}
    ${eggs:devtools}

#eggs = Plone
#    p4a.plonecalendar
#    p4a.subtyper
#    Products.remember
#    Products.RichDocument
#    Products.ATVocabularyManager
#    fireplone.policy
#    fireplone.theme
#    fireplone.portlet

#zcml = Products.RichDocument
#   p4a.subtyper
#   p4a.subtyper-meta
##  p4a.plonecalendar

#products = ${buildout:directory}/products
##    ${productdistros:location}
##    ${plone:products}


#[versions]
#p4a.plonecalendar=2.1b1
#Products.remember=1.9.1
#Products.RichDocument=3.4
#Products.ATVocabularyManager


# Test runner. Run: ``bin/test`` to execute all tests
[test]
recipe = zc.recipe.testrunner
eggs = ${eggs:test}
defaults = ['--auto-color', '--auto-progress']

# Coverage report generator.
# Run: ``bin/test --coverage=coverage``
# and then: ``bin/coveragereport``
[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport
arguments = ('parts/test/coverage', 'coverage')

# Installs links to all installed packages to ``parts/omelette``.
# On Windows, you need to install junction.exe first
[omelette]
recipe = collective.recipe.omelette
eggs = 
    ${eggs:main}
    ${eggs:devtools}

# Installs the ``bin/zopepy`` interpreter.
[zopepy]
recipe = zc.recipe.egg
eggs = 
    ${eggs:main}
    ${eggs:devtools}
interpreter = zopepy

# Installs ZopeSkel, which can be used to create new packages
# Run: ``bin/zopeskel``
[zopeskel]
recipe = zc.recipe.egg
eggs = ZopeSkel

# Tool to help check for new versions.
# Run: ``bin/checkversions versions.cfg``
[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

# Tool to make releases
# Run: ``bin/mkrelease --help``
[mkrelease]
recipe = zc.recipe.egg
eggs = jarn.mkrelease

[archgenxml]
recipe = zc.recipe.egg
extra-paths = parts/zope2/lib/python
